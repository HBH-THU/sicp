;;; Solutions copyright (C) 2007, Peter Danenberg; http://wizardbook.org
;;; Source code copyright (C) 1996, MIT; http://mitpress.mit.edu/sicp

(load "query-environment/add-assertion-body.scm")
(load "query-environment/add-assertion!.scm")
(load "query-environment/add-rule-or-assertion!.scm")
(load "query-environment/add-rule!.scm")
(load "query-environment/all-bound?.scm")
(load "query-environment/always-true.scm")
(load "query-environment/apply-a-rule.scm")
(load "query-environment/apply-rules.scm")
(load "query-environment/args.scm")
(load "query-environment/assertion-to-be-added?.scm")
(load "query-environment/binding-in-frame.scm")
(load "query-environment/binding-value.scm")
(load "query-environment/binding-variable.scm")
(load "query-environment/bindings.scm")
(load "query-environment/check-an-assertion.scm")
(load "query-environment/combine.scm")
(load "query-environment/conclusion.scm")
(load "query-environment/conjoin.scm")
(load "query-environment/constant-symbol?.scm")
(load "query-environment/contents.scm")
(load "query-environment/contract-question-mark.scm")
(load "query-environment/depends-on?.scm")
(load "query-environment/disjoin.scm")
(load "query-environment/display-line.scm")
(load "query-environment/display-stream.scm")
(load "query-environment/empty-conjunction?.scm")
(load "query-environment/empty-disjunction?.scm")
;;(load "query-environment/environment-empty?.scm")
(load "query-environment/environment-bound-symbol?.scm")
(load "query-environment/environment-lookup-symbol.scm")
(load "query-environment/execute.scm")
(load "query-environment/expand-question-mark.scm")
(load "query-environment/extend-if-consistent.scm")
(load "query-environment/extend-if-possible.scm")
(load "query-environment/extend.scm")
(load "query-environment/fetch-assertions.scm")
(load "query-environment/fetch-rules.scm")
(load "query-environment/find-assertions.scm")
(load "query-environment/first-conjunct.scm")
(load "query-environment/first-disjunct.scm")
(load "query-environment/flatten-stream.scm")
(load "query-environment/get-all-assertions.scm")
(load "query-environment/get-all-rules.scm")
(load "query-environment/get-indexed-assertions.scm")
(load "query-environment/get-indexed-rules.scm")
(load "query-environment/get.scm")
(load "query-environment/get-stream.scm")
(load "query-environment/indexable?.scm")
(load "query-environment/index-key-of.scm")
(load "query-environment/initialize-data-base.scm")
(load "query-environment/input-prompt.scm")
(load "query-environment/install.scm")
(load "query-environment/instantiate.scm")
(load "query-environment/interleave-delayed.scm")
(load "query-environment/interleave.scm")
(load "query-environment/lisp-value.scm")
(load "query-environment/make-binding.scm")
(load "query-environment/make-environment.scm")
(load "query-environment/make-new-variable.scm")
(load "query-environment/make-table.scm")
(load "query-environment/map-over-symbols.scm")
(load "query-environment/microshaft-data-base.scm")
(load "query-environment/negate-bind.scm")
(load "query-environment/negate-bound.scm")
(load "query-environment/n-ary-cartesian.scm")
(load "query-environment/negated-query.scm")
(load "query-environment/negate.scm")
(load "query-environment/new-rule-application-id.scm")
(load "query-environment/output-prompt.scm")
(load "query-environment/parallel-execute.scm")
(load "query-environment/pattern-match.scm")
(load "query-environment/predicate.scm")
(load "query-environment/prompt-for-input.scm")
(load "query-environment/put.scm")
(load "query-environment/qeval.scm")
(load "query-environment/query.scm")
(load "query-environment/query-driver-loop.scm")
(load "query-environment/query-syntax-process.scm")
(load "query-environment/rename-variables-in.scm")
(load "query-environment/rest-conjuncts.scm")
(load "query-environment/rest-disjuncts.scm")
(load "query-environment/rule-body.scm")
(load "query-environment/rule-counter.scm")
(load "query-environment/rule?.scm")
(load "query-environment/simple-query.scm")
(load "query-environment/singleton-stream.scm")
(load "query-environment/store-assertion-in-index.scm")
(load "query-environment/store-rule-in-index.scm")
(load "query-environment/stream-append-delayed.scm")
(load "query-environment/stream-flatmap.scm")
(load "query-environment/tagged-list?.scm")
(load "query-environment/test.scm")
(load "query-environment/test-return.scm")
(load "query-environment/the-assertions.scm")
;;(load "query-environment/the-empty-environment.scm")
(load "query-environment/the-rules.scm")
(load "query-environment/try-kill.scm")
(load "query-environment/type.scm")
(load "query-environment/unify-match.scm")
(load "query-environment/uniquely-asserted.scm")
(load "query-environment/use-index?.scm")
(load "query-environment/var?.scm")
(load "query-environment/variable-symbol.scm")
'done
