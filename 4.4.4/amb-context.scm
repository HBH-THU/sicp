(load "amb/ambeval.scm")
(load "amb/ambeval-global-n.scm")
(load "amb/ambeval-global.scm")
(load "amb/ambeval-global-until-fail.scm")
(load "amb/amb-choices.scm")
(load "amb/analyze.scm")
(load "amb/analyze-sequence.scm")
(load "amb/and-clauses.scm")
(load "amb/and->if.scm")
(load "amb/announce-output.scm")
(load "amb/apply-primitive-procedure.scm")
(load "amb/assignment-value.scm")
(load "amb/assignment-variable.scm")
(load "amb/begin-actions.scm")
(load "amb/binding-value-amb.scm")
(load "amb/binding-frame.scm")
(load "amb/bind-variable!.scm")
(load "amb/compound-procedure?.scm")
(load "amb/cond-actions.scm")
(load "amb/cond-=>-clause?.scm")
(load "amb/cond-clauses.scm")
(load "amb/cond-else-clause?.scm")
(load "amb/cond->if.scm")
(load "amb/cond-predicate.scm")
(load "amb/cond-recipient.scm")
(load "amb/define-variable!.scm")
(load "amb/definition?.scm")
(load "amb/definition-value.scm")
(load "amb/definition-variable.scm")
(load "amb/do-commands.scm")
(load "amb/do-parameter-init.scm")
(load "amb/do-parameter-step-omitted?.scm")
(load "amb/do-parameter-step.scm")
(load "amb/do-parameter-variable.scm")
(load "amb/do-parameters.scm")
(load "amb/do-test.scm")
(load "amb/empty-environment?.scm")
(load "amb/enclosing-environment.scm")
(load "amb/eval.scm")
(load "amb/eval-do.scm")
;(load "amb/eval-global.scm")
(load "amb/eval-sequence.scm")
(load "amb/eval-unbind.scm")
(load "amb/expand-and-clauses.scm")
(load "amb/expand-clauses.scm")
(load "amb/expand-or-clauses.scm")
(load "amb/extend-environment.scm")
(load "amb/find-binding.scm")
(load "amb/first-exp.scm")
(load "amb/first-frame.scm")
(load "amb/first-operand.scm")
(load "amb/get-amb.scm")
(load "amb/if-alternative.scm")
(load "amb/if-consequent.scm")
(load "amb/if-predicate.scm")
(load "amb/input-prompt-amb.scm")
(load "amb/install-amb-package.scm")
(load "amb/install-and-package.scm")
(load "amb/install-application-package.scm")
(load "amb/install-assignment-package.scm")
(load "amb/install-begin-package.scm")
(load "amb/install-cond-package.scm")
(load "amb/install-definition-package.scm")
(load "amb/install-do-package.scm")
(load "amb/install-if-fail-package.scm")
(load "amb/install-if-package.scm")
(load "amb/install-lambda-package.scm")
(load "amb/install-let-package.scm")
(load "amb/install-let*-package.scm")
(load "amb/install-letrec-package.scm")
(load "amb/install-or-package.scm")
(load "amb/install-packages.scm")
(load "amb/install-permanent-assignment-package.scm")
(load "amb/install-quoted-package.scm")
(load "amb/install-require-package.scm")
(load "amb/install-self-evaluating-package.scm")
(load "amb/install-unbind-package.scm")
(load "amb/install-variable-package.scm")
(load "amb/install-xor-package.scm")
(load "amb/last-exp?.scm")
(load "amb/lambda-body.scm")
(load "amb/lambda-parameters.scm")
(load "amb/let-binding-value.scm")
(load "amb/let-binding-variable.scm")
(load "amb/let-bindings.scm")
(load "amb/let*-bindings")
(load "amb/let-body.scm")
(load "amb/let*-body")
(load "amb/let->combination.scm")
(load "amb/let*->nested-lets.scm")
(load "amb/letrec->let.scm")
(load "amb/letrec-bindings.scm")
(load "amb/letrec-binding-value.scm")
(load "amb/letrec-binding-variable.scm")
(load "amb/letrec-body.scm")
(load "amb/lookup-variable-value.scm")
(load "amb/make-assignment.scm")
(load "amb/make-begin.scm")
(load "amb/make-binding-amb.scm")
(load "amb/make-definition.scm")
(load "amb/make-frame.scm")
(load "amb/make-if.scm")
(load "amb/make-lambda.scm")
(load "amb/make-let.scm")
(load "amb/make-nested-let.scm")
(load "amb/make-procedure.scm")
(load "amb/make-procedure-definition.scm")
(load "amb/make-unassignment.scm")
(load "amb/make-unbound!.scm")
(load "amb/named-let-bindings.scm")
(load "amb/named-let-binding-value.scm")
(load "amb/named-let-binding-variable.scm")
(load "amb/named-let-body.scm")
(load "amb/named-let-procedure.scm")
(load "amb/named-let?.scm")
(load "amb/no-operands?.scm")
(load "amb/operands.scm")
(load "amb/operator.scm")
(load "amb/or-clauses.scm")
(load "amb/or->if.scm")
(load "amb/output-prompt-amb.scm")
(load "amb/parallel-execute.scm")
(load "amb/primitive-implementation.scm")
(load "amb/primitive-procedure-names.scm")
(load "amb/primitive-procedure-objects.scm")
(load "amb/primitive-procedure?.scm")
(load "amb/primitive-procedures.scm")
(load "amb/procedure-body.scm")
(load "amb/procedure-environment.scm")
(load "amb/procedure-parameters.scm")
(load "amb/prompt-for-input.scm")
(load "amb/put-amb.scm")
(load "amb/randomize.scm")
(load "amb/rest-exps.scm")
(load "amb/rest-operands.scm")
(load "amb/sequence->exp.scm")
(load "amb/set-variable-value!.scm")
(load "amb/setup-environment.scm")
(load "amb/tagged-list?.scm")
(load "amb/test.scm")
(load "amb/test-return.scm")
(load "amb/text-of-quotation.scm")
(load "amb/the-empty-environment.scm")
(load "amb/the-global-environment.scm")
(load "amb/true?.scm")
(load "amb/type-tag.scm")
(load "amb/unassigned?.scm")
(load "amb/unbind-variable!.scm")
(load "amb/unbound-binding?.scm")
(load "amb/user-print.scm")
(load "amb/xor->and-or.scm")
'done
