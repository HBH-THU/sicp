(load "variable?.scm")
(load "same-variable?.scm")
(load "sum?.scm")
(load "make-sum.scm")
(load "addend.scm")
(load "augend.scm")
(load "product?.scm")
(load "make-product.scm")
(load "multiplier.scm")
(load "multiplicand.scm")
(load "exponentiation?.scm")
(load "exponent.scm")
(load "base.scm")
(load "make-exponentiation.scm")

(define (deriv exp var)
  (cond ((number? exp) 0)
        ((variable? exp)
         (if (same-variable? exp var) 1 0))
        ((sum? exp)
         (make-sum (deriv (addend exp) var)
                   (deriv (augend exp) var)))
        ((product? exp)
         (make-sum
          (make-product (multiplier exp)
                        (deriv (multiplicand exp) var))
          (make-product (deriv (multiplier exp) var)
                        (multiplicand exp))))
        ((exponentiation? exp)
         (make-exponentiation (base exp) (exponent exp)))
        (else
         (error "unknown expression type -- DERV" exp))))
