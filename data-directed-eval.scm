#!/usr/bin/env chicken-scheme
(use sicp sicp-eval)

(put 'eval 'quote (lambda (exp env)
                    (text-of-quotation exp)))
(put 'eval 'set! eval-assignment)
(put 'eval 'define eval-definition)
(put 'eval 'if eval-if)
(put 'eval 'lambda (lambda (exp env)
                (make-procedure (lambda-parameters exp)
                                (lambda-body exp)
                                env)))
(put 'eval 'begin (lambda (exp env)
                    (eval-sequence (begin-actions exp) env)))
(put 'eval 'cond (lambda (exp env)
                   (eval* (cond->if exp) env)))
(put 'eval 'application (lambda (exp env)
                          (apply* (eval* (operator exp) env)
                                  (list-of-values (operands exp) env))))

(define (eval* exp env)
  (cond ((self-evaluating? exp) exp)
        ((variable? exp) (lookup-variable-value exp env))
        ((pair? exp)
         (let ((dispatch (or (get 'eval (car exp))
                             (get 'eval 'application))))
           (dispatch exp env)))))
