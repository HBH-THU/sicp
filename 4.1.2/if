./.svn/entries:cond-clauses.scm
./.svn/entries:cond-actions.scm
./.svn/entries:cond->if.scm
./.svn/entries:cond-predicate.scm
./.svn/entries:cond-else-clause?.scm
./.svn/all-wcprops:cond-clauses.scm
./.svn/all-wcprops:/!svn/ver/94/wizardbook/trunk/4.1.2/cond-clauses.scm
./.svn/all-wcprops:cond-actions.scm
./.svn/all-wcprops:/!svn/ver/94/wizardbook/trunk/4.1.2/cond-actions.scm
./.svn/all-wcprops:cond->if.scm
./.svn/all-wcprops:/!svn/ver/94/wizardbook/trunk/4.1.2/cond-%3Eif.scm
./.svn/all-wcprops:cond-predicate.scm
./.svn/all-wcprops:/!svn/ver/94/wizardbook/trunk/4.1.2/cond-predicate.scm
./.svn/all-wcprops:cond-else-clause?.scm
./.svn/all-wcprops:/!svn/ver/94/wizardbook/trunk/4.1.2/cond-else-clause%3F.scm
./cond-predicate.scm:(define (cond-predicate clause) (car clause))
./install-cond-package.scm:(define (install-cond-package)
./install-cond-package.scm:  (put 'cond (lambda (exp env) (eval (cond->if exp) env)))
./eval-call.scm:(load "cond->if.scm")
./eval-call.scm:        ((cond? exp) (eval (cond->if exp) env))
./cond-actions.scm:(define (cond-actions clause) (cdr clause))
./cond-else-clause?.scm:(load "cond-predicate.scm")
./cond-else-clause?.scm:(define (cond-else-clause? clause)
./cond-else-clause?.scm:  (eq? (cond-predicate clause) 'else))
./install-packages.scm:(load "install-cond-package.scm")
./install-packages.scm:  (install-cond-package)
./cond->if.scm:(load "cond-clauses.scm")
./cond->if.scm:(define (cond->if exp)
./cond->if.scm:  (expand-clauses (cond-clauses exp)))
./expand-clauses.scm:(load "cond-else-clause?.scm")
./expand-clauses.scm:(load "cond-predicate.scm")
./expand-clauses.scm:(load "cond-actions.scm")
./expand-clauses.scm:        (if (cond-else-clause? first)
./expand-clauses.scm:                (sequence->exp (cond-actions first))
./expand-clauses.scm:                (error "ELSE clause isn't last -- COND->IF"
./expand-clauses.scm:            (make-if (cond-predicate first)
./expand-clauses.scm:                     (sequence->exp (cond-actions first))
./cond-clauses.scm:(define (cond-clauses exp) (cdr exp))
